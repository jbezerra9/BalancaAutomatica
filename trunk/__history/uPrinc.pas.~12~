unit uPrinc;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.StrUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Imaging.jpeg, Vcl.ExtCtrls,
  ACBrBase, ACBrBAL, Vcl.StdCtrls, Data.DB, Data.FMTBcd, Data.SqlExpr,
  Datasnap.DBClient, RLReport;

type
  TfPrinc = class(TForm)
    pnlTitulo: TPanel;
    Image1: TImage;
    pnlPeso: TPanel;
    FACBrBAL: TACBrBAL;
    mMensagem: TMemo;
    lbBBifood: TLabel;
    sqlcon: TSQLQuery;
    Label1: TLabel;
    Label2: TLabel;
    vrProd: TLabel;
    vrPeso: TLabel;
    cdsProd: TClientDataSet;
    cdsProdDescricao: TStringField;
    cdsProdqtd: TFloatField;
    cdsProdVrTotal: TCurrencyField;
    cdsProdUN: TStringField;
    cdsProdVrVenda: TCurrencyField;
    dsProd: TDataSource;
    cdsProdComanda: TStringField;
    sqlcon2: TSQLQuery;
    procedure FormDestroy(Sender: TObject);
    procedure FACBrBALLePeso(Peso: Double; Resposta: AnsiString);
    procedure FormShow(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormResize(Sender: TObject);
  private
    { Private declarations }
    vrvenda : double;
    function lerBalanca(Peso : Double) : boolean;
  public
    { Public declarations }
    peso1 : double;
  end;

var
  fPrinc: TfPrinc;
  codUsuario: Integer;
  nomUsuario, sUserFunc, codCaixa, datasenha: String;
  sAcessoUsuario: String;
  sAcessoSenha : String;
  sCodProd     : String;

implementation

{$R *.dfm}

uses uFuncoes, uModulo, Utransacao, uMensagem, upesqcad, urelPagamento,
  uselecionaprod;

function TfPrinc.lerBalanca(Peso : Double) : boolean;
begin
    if peso1 = peso then
       exit
    else
       peso1 := peso;

    if peso < strToFloat('0,020') then
      exit;

    mMensagem.Lines.Clear;
    mMensagem.Color    := clYellow;
    mMensagem.Lines.Add('');
    mMensagem.Lines.Add('Lendo balança...');

    sleep(3000);

    if peso1 <> peso then
    begin
        mMensagem.Lines.Clear;
        mMensagem.Lines.Add(' ');
        mMensagem.Lines.Add('Erro na leitura. ');
        mMensagem.Lines.Add('Retire o prato e coloque na balança');
        mMensagem.Lines.Add(' ');
        mMensagem.Color    := clRed;

        vrPeso.Caption      := '';
        vrProd.Caption      := '';
        exit;
    end;

    mMensagem.Lines.Clear;
    mMensagem.Color    := clLime;
    mMensagem.Lines.Add(' ');
    mMensagem.Lines.Add('Leitura concluída!');
    mMensagem.Lines.Add('Por favor retire seu prato.');
    mMensagem.Lines.Add(' ');

    vrPeso.Caption      := Format('%.3f kg', [Peso]);
    vrProd.Caption      := FormatCurr('R$ #,##0.00', vrvenda * peso);

    sqlcon.Close;
    sqlcon.SQL.Text := 'select tbprod.descricao, tbprod.pvendaa, '+
                       '(tbprod.pVendaa * ' +  Trocavirgula(peso) + ') as vrTotal,  ' +
                       'tbunmed.descricao as un '+
                       'from tbprod '  +
                       'left join tbunmed on tbunmed.codigo = tbprod.unmed ' +
                       'where tbprod.codigo = ' + sCodProd;
    sqlcon.Open;

    sqlcon2.Close;
    sqlcon2.SQL.Text := 'select max(tbcomanda.comanda) as comanda from tbcomanda';
    sqlcon2.Open;

    if sqlcon.IsEmpty then
      exit;

    cdsProd.EmptyDataSet;

    cdsProd.Insert;
    cdsProdDescricao.AsString := sqlcon.FieldByName('descricao').AsString;
    cdsProdQtd.AsFloat        := peso;
    cdsProdComanda.AsString   := IntToStr(sqlcon2.FieldByName('comanda').AsInteger + 1);
    cdsProdVrVenda.AsCurrency := sqlcon.FieldByName('vrVendaa').AsCurrency;
    cdsProdVrTotal.AsCurrency := sqlcon.FieldByName('vrTotal').AsCurrency;
    cdsProdUN.AsCurrency      := sqlcon.FieldByName('un').AsCurrency;
    cdsProd.Post;

    try
        application.CreateForm(Tfrelpagamento, frelpagamento);
        frelpagamento.qrlNomeEmp.Caption := dm.tbempEMPRESA.AsString;
        frelpagamento.rlComanda2.Caption := 'Comanda: ' +cdsProdComanda.AsString;
        frelpagamento.Imprimir;
    finally
        freeAndNil(frelpagamento);
    end;

    sleep(2000);
end;

procedure TfPrinc.FACBrBALLePeso(Peso: Double; Resposta: AnsiString);
begin
    if peso = strToFloat('0,000') then
    begin
        mMensagem.Lines.Clear;
        mMensagem.Lines.Add(' ');
        mMensagem.Lines.Add('Balança pronta.');
        mMensagem.Lines.Add('Coloque o seu prato!');
        mMensagem.Lines.Add(' ');
        mMensagem.Color    := clLime;

        vrPeso.Caption      := '';
        vrProd.Caption      := '';

        exit;
    end;

    lerBalanca(Peso);
end;

procedure TfPrinc.FormCreate(Sender: TObject);
begin
    FAcBrBAL.Ativar;
end;

procedure TfPrinc.FormDestroy(Sender: TObject);
begin
   // Desconecta da balança e libera o objeto
    FAcBrBAL.Desativar;
    FAcBrBAL.Free;
end;

procedure TfPrinc.FormResize(Sender: TObject);
begin
    pnlTitulo.Width := Fprinc.Width;
end;

procedure TfPrinc.FormShow(Sender: TObject);
var sql : string;
begin
    sCodProd := dm.sCodProd;

    cdsprod.CreateDataSet;

    sqlcon.close;
    sqlcon.SQL.Text := ' select pvendaa from tbprod where codigo = ' + quotedStr(scodprod) ;
    sqlcon.Open;

    if sqlcon.IsEmpty then
    begin
        Application.Messagebox('Produto invalido!', 'Atençao', mb_iconexclamation);
        close;
    end;

    vrvenda := sqlcon.FieldByName('pvendaa').AsFloat;

    mMensagem.Lines.Clear;
  //  mMensagem.Lines.Add(' ');
    mMensagem.Lines.Add('Balança pronta.');
    mMensagem.Lines.Add('Coloque o seu prato!');
    mMensagem.Color    := clLime;

    pnlPeso.Caption    := '';
    vrProd.Caption     := '';
end;

end.
